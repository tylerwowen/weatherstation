{"version":3,"sources":["../../../public/javascripts/plot.js"],"names":["xmlHttp","XMLHttpRequest","onreadystatechange","responseHandler","open","buildRequest","send","readyState","res","JSON","parse","responseText","data","formTemp","results","formHum","Plotly","newPlot","start","Date","setHours","getHours","end","getTime","time","temp","i","length","push","timestamp","temperature","x","y","type","hum","humidity"],"mappings":"AAAA;;;AAGA;;AAEA,IAAIA,UAAU,IAAIC,cAAJ,EAAd;;AAEAD,QAAQE,kBAAR,GAA6BC,eAA7B;AACAH,QAAQI,IAAR,CAAa,KAAb,EAAoBC,cAApB,EAAoC,IAApC;AACAL,QAAQM,IAAR;;AAGA,SAASH,eAAT,GAA2B;AACzB;;AAEA,MAAIH,QAAQO,UAAR,KAAuB,CAA3B,EAA8B;AAC5B,QAAIC,MAAMC,KAAKC,KAAL,CAAWV,QAAQW,YAAnB,CAAV;AACA,QAAIC,OAAO,CAACC,SAASL,IAAIM,OAAb,CAAD,EAAwBC,QAAQP,IAAIM,OAAZ,CAAxB,CAAX;AACAE,WAAOC,OAAP,CAAe,OAAf,EAAwBL,IAAxB;AACD;AACF;;AAED,SAASP,YAAT,GAAwB;;AAEtB,MAAIa,QAAQ,IAAIC,IAAJ,EAAZ;AACAD,QAAME,QAAN,CAAeF,MAAMG,QAAN,KAAiB,CAAhC;AACA,MAAIC,MAAM,IAAIH,IAAJ,EAAV;AACA,6BAAyBD,MAAMK,OAAN,EAAzB,aAAgDD,IAAIC,OAAJ,EAAhD;AACD;;AAED,SAASV,QAAT,CAAkBD,IAAlB,EAAwB;AACtB,MAAIY,OAAO,EAAX;AACA,MAAIC,OAAO,EAAX;AACA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAId,KAAKe,MAAzB,EAAiCD,GAAjC,EAAsC;AACpCF,SAAKI,IAAL,CAAU,IAAIT,IAAJ,CAASP,KAAKc,CAAL,EAAQG,SAAjB,CAAV;AACAJ,SAAKG,IAAL,CAAUhB,KAAKc,CAAL,EAAQI,WAAlB;AACD;AACD,SAAO;AACLC,OAAGP,IADE;AAELQ,OAAGP,IAFE;AAGLQ,UAAM;AAHD,GAAP;AAKD;;AAED,SAASlB,OAAT,CAAiBH,IAAjB,EAAuB;AACrB,MAAIY,OAAO,EAAX;AACA,MAAIU,MAAM,EAAV;AACA,OAAK,IAAIR,IAAI,CAAb,EAAgBA,IAAId,KAAKe,MAAzB,EAAiCD,GAAjC,EAAsC;AACpCF,SAAKI,IAAL,CAAU,IAAIT,IAAJ,CAASP,KAAKc,CAAL,EAAQG,SAAjB,CAAV;AACAK,QAAIN,IAAJ,CAAShB,KAAKc,CAAL,EAAQS,QAAjB;AACD;AACD,SAAO;AACLJ,OAAGP,IADE;AAELQ,OAAGE,GAFE;AAGLD,UAAM;AAHD,GAAP;AAKD","file":"plot.js","sourcesContent":["/**\n * Created by tylero on 3/23/17.\n */\n\"use strict\";\n\nlet xmlHttp = new XMLHttpRequest();\n\nxmlHttp.onreadystatechange = responseHandler;\nxmlHttp.open(\"GET\", buildRequest(), true);\nxmlHttp.send();\n\n\nfunction responseHandler() {\n  \"use strict\";\n\n  if (xmlHttp.readyState === 4) {\n    let res = JSON.parse(xmlHttp.responseText);\n    let data = [formTemp(res.results), formHum(res.results)];\n    Plotly.newPlot('myDiv', data);\n  }\n}\n\nfunction buildRequest() {\n\n  let start = new Date();\n  start.setHours(start.getHours()-6);\n  let end = new Date();\n  return `/temphum/start/${start.getTime()}/end/${end.getTime()}/granularity/min`;\n}\n\nfunction formTemp(data) {\n  let time = [];\n  let temp = [];\n  for (let i = 0; i < data.length; i++) {\n    time.push(new Date(data[i].timestamp));\n    temp.push(data[i].temperature);\n  }\n  return {\n    x: time,\n    y: temp,\n    type: 'scatter'\n  };\n}\n\nfunction formHum(data) {\n  let time = [];\n  let hum = [];\n  for (let i = 0; i < data.length; i++) {\n    time.push(new Date(data[i].timestamp));\n    hum.push(data[i].humidity);\n  }\n  return {\n    x: time,\n    y: hum,\n    type: 'scatter'\n  };\n}"]}